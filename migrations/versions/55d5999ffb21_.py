"""empty message

Revision ID: 55d5999ffb21
Revises: 
Create Date: 2024-12-21 15:05:28.852654

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '55d5999ffb21'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('food',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=128), nullable=False),
    sa.Column('brand', sa.String(length=64), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('used', sa.Boolean(), nullable=True),
    sa.Column('out_of_stock', sa.Boolean(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('expiry_date', sa.DateTime(), nullable=False),
    sa.Column('added_date', sa.DateTime(), nullable=True),
    sa.Column('calories_content', sa.Float(), nullable=True),
    sa.Column('nutrition_content', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('food', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_food_name'), ['name'], unique=False)

    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_name'), ['name'], unique=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_name'))

    op.drop_table('user')
    with op.batch_alter_table('food', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_food_name'))

    op.drop_table('food')
    # ### end Alembic commands ###
